#
# vigiboard - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory,
# and generally should not be modified by end users.

[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 8086

[app:main]
use = egg:vigilo-turbogears

db_basename=vigilo_
password_schemes=sha256_crypt
deprecated_password_schemes=hex_md5
lang=fr
cache_max_age=0

; Liste des noms des groupes d'utilisateurs privilégiés,
; séparés par des virgules.
; Par défaut : "managers"
admin_groups = managers

; Doit être laissé à true pour obtenir une application complète.
full_stack = true

; Le nom du dossier dans lequel les fichiers de sessions
; sont conservés. "%(here)s" est remplacé par le chemin
; d'accès jusqu'au dossier contenant ce fichier.
cache_dir = %(here)s/data

; Le nom du cookie de session qui sera créé sur le navigateur
; du client.
beaker.session.key = vigilo

; La clé secrète utilisée pour chiffrer/déchiffrer la session.
; Voir également "sa_auth.cookie_secret".
beaker.session.secret = vigilo

; La clé secret utilisée pour chiffrer/déchiffrer le cookie
; d'authentification.
; Voir également "beaker.session.secret".
sa_auth.cookie_secret = vigilo

sqlalchemy.url=postgresql://vigilo:vigilo@127.0.0.1/vigilo
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

auth.config = %(here)s/who.ini
#auth.log_file = stdout
#auth.log_level = debug

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, turbogears, sqlalchemy, auth

[handlers]
keys = console,sql_log,root_log,turbogears_log,auth_log

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_turbogears]
level = INFO
handlers = turbogears_log
qualname = vigilo.turbogears

[logger_sqlalchemy]
level = INFO
handlers = console
#sql_log
qualname = sqlalchemy.engine

# A logger for authentication, identification and authorization -- this is
# repoze.who and repoze.what:
[logger_auth]
level = WARN
handlers = auth_log
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sql_log]
class = FileHandler
args = ('log/sql.log','a')
level = INFO
formatter = generic

[handler_root_log]
class = FileHandler
args = ('log/root.log','a')
level = INFO
formatter = generic

[handler_turbogears_log]
class = FileHandler
args = ('log/turbogears.log','a')
level = INFO
formatter = generic

[handler_auth_log]
class = FileHandler
args = ('log/auth.log','a')
level = INFO
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
class = vigilo.common.logging.VigiloFormatter
