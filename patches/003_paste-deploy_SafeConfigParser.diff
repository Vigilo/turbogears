# Utilisation de SafeConfigParser au lieu de ConfigParser pour
# g√©rer correctement l'interpolation de variables dans les fichiers
# de configuration. SafeConfigParser est disponible depuis Python 2.3.
# Cf. #650 dans notre tracker.
--- a/paste/deploy/loadwsgi.py	2009-09-07 14:24:47.000000000 +0200
+++ b/paste/deploy/loadwsgi.py	2009-09-07 14:45:01.000000000 +0200
@@ -4,7 +4,7 @@
 import re
 import sys
 import urllib
-from ConfigParser import ConfigParser
+from ConfigParser import SafeConfigParser
 import pkg_resources
 from paste.deploy.util.fixtypeerror import fix_call
 
@@ -40,10 +40,10 @@
         result.extend(_flatten(item))
     return result
 
-class NicerConfigParser(ConfigParser):
+class NicerConfigParser(SafeConfigParser):
 
     def __init__(self, filename, *args, **kw):
-        ConfigParser.__init__(self, *args, **kw)
+        SafeConfigParser.__init__(self, *args, **kw)
         self.filename = filename
 
     def defaults(self):
@@ -52,14 +52,14 @@
 
         Mainly to support defaults using values such as %(here)s
         """
-        defaults = ConfigParser.defaults(self).copy()
+        defaults = SafeConfigParser.defaults(self).copy()
         for key, val in defaults.iteritems():
             defaults[key] = self._interpolate('DEFAULT', key, val, defaults)
         return defaults
 
     def _interpolate(self, section, option, rawval, vars):
         try:
-            return ConfigParser._interpolate(
+            return SafeConfigParser._interpolate(
                 self, section, option, rawval, vars)
         except Exception, e:
             args = list(e.args)
